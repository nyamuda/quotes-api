{
  "swagger": "2.0",
  "info": {
    "title": "Quotes API",
    "description": "Powerful quotes by various authors",
    "version": "1.0.0"
  },
  "host": "quotes-app-7pqb.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "oAuthGithub": {
      "type": "oauth2",
      "authorizationUrl": "https://quotes-app-7pqb.onrender.com/login/github",
      "flow": "implicit"
    }
  },
  "paths": {
    "/quotes/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Add new quote. Only admins have the authority to do this.\n    Default admin details &#187; <b>email: </b><i>admin@example.com</i>, <b>password: </b><i>helloworld</i>. \n   Login with those details and get the authorization token.",
            "schema": {
              "$ref": "#/definitions/AddQuote"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/quotes/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Updating a quote. Only admins have the authority to do this.\n    Default admin details &#187; <b>email: </b><i>admin@example.com</i>, <b>password: </b><i>helloworld</i>. \n   Login with those details and get the authorization token.",
            "schema": {
              "$ref": "#/definitions/UpdateQuote"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Delete a quote. Only admins have the authority to do this.\n    Default admin details &#187; <b>email: </b><i>admin@example.com</i>, <b>password: </b><i>helloworld</i>. \n   Login with those details and get the authorization token."
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/oauth-callback": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Login a user",
            "schema": {
              "$ref": "#/definitions/loginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/register": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Register a new user",
            "schema": {
              "$ref": "#/definitions/registerUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          }
        }
      }
    }
  },
  "definitions": {
    "AddQuote": {
      "type": "object",
      "properties": {
        "quote": {
          "type": "string",
          "example": "add a new quote"
        },
        "author": {
          "type": "string",
          "example": "Tatenda Nyamuda"
        }
      },
      "required": [
        "quote",
        "author"
      ]
    },
    "UpdateQuote": {
      "type": "object",
      "properties": {
        "quote": {
          "type": "string",
          "example": "update a quote"
        },
        "author": {
          "type": "string",
          "example": "Tatenda Nyamuda"
        }
      }
    },
    "registerUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "email@example.com"
        },
        "password": {
          "type": "string",
          "example": "helloworld"
        }
      }
    },
    "loginUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "email@example.com"
        },
        "password": {
          "type": "string",
          "example": "helloworld"
        }
      }
    }
  }
}